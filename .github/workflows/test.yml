name: Test packages

run-name: ${{github.event_name == 'schedule' && 'Nightly' || github.event_name == 'workflow_dispatch' && format('Test {0}', inputs.packages) || ''}}

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches-ignore: ['dependabot/**', 'draft/**', 'play/**']
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      packages:
        description: package names (aliases and variations)
        type: string
        required: true
      test-type:
        description: testing type (unit, it, e2e)
        type: string
        required: false
      build-type:
        description: build type
        type: string
        required: false
      setup-type:
        description: setup type
        type: string
        required: false
      env:
        description: environment variables
        type: string
        required: false
      grep:
        description: test name pattern
        required: false
      links:
        description: use packages from source
        required: false

concurrency: 
  group: ${{github.event_name == 'pull_request' && github.ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 3
  NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  APPLITOOLS_API_KEY: ${{secrets.APPLITOOLS_API_KEY}}
  APPLITOOLS_API_KEY_READ: ${{secrets.APPLITOOLS_API_KEY_READ}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  BROWSERSTACK_USERNAME: applitools
  BROWSERSTACK_ACCESS_KEY: ${{secrets.BROWSERSTACK_ACCESS_KEY}}

jobs:
  setup:
    name: Setup
    if: ${{github.event_name == 'workflow_dispatch' || (github.actor != 'dependabot[bot]' && !github.event.pull_request.draft)}}
    runs-on: ubuntu-latest
    outputs:
      packages: ${{steps.setup.outputs.packages}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/parser
        id: setup
        with:
          packages: ${{github.event.inputs.packages || (github.event_name == 'pull_request' && 'changed') || (github.event_name == 'schedule' && 'all')}}
          env: ${{github.event.inputs.env}}
          allow-variations: true
          link-dependencies: ${{github.event.inputs.links == 'all' || github.event_name == 'pull_request' || github.event_name == 'schedule'}}
  test:
    needs: setup
    strategy:
      fail-fast: false
      matrix: 
        include: ${{fromJSON(needs.setup.outputs.packages)}}
    name: ${{matrix.displayName}}
    timeout-minutes: 60
    runs-on: ${{matrix.params.runner}}
    env: ${{matrix.params.env}}
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.params.node}}
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Run tests
        uses: ./.github/actions/tests
        with:
          working-directory: ${{matrix.path}}
          test-type: ${{(github.event_name == 'pull_request' && 'sanity') || github.event.inputs.test-type}}
          build-type: ${{github.event.inputs.build-type}}
          setup-type: ${{github.event.inputs.setup-type}}
          links: ${{matrix.params.links || github.event.inputs.links}}
          grep: ${{github.event.inputs.grep}}
      - name: Save testing artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: artifact-${{matrix.name}}
          retention-days: 2
          if-no-files-found: ignore
          path: |
            ${{matrix.path}}/logs/**/*

  report:
    name: Report
    needs: [test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Download testing artifacts
        uses: actions/download-artifact@v3
      - name: Report
        id: report
        uses: ./.github/actions/report
        with:
          path: ./artifact-*/report*.json
      - name: Send slack notification
        if: ${{always() && github.event_name == 'schedule'}}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "${{fromJSON(steps.report.outputs.failed-tests) > 0 && '#f85149' || '#3fb950'}}",
                  "blocks": [
                    {
                      "type":"section",
                      "text": {"type": "mrkdwn", "text": "@channel *Nightly* <https://github.com/applitools/eyes.sdk.javascript1/actions/runs/${{github.run_id}}|workflow> has been finished ü¶â"}
                    },
                    {
                      "type":"section",
                      "text": {"type": "plain_text", "emoji": true, "text": "${{fromJSON(steps.report.outputs.failed-tests) > 0 && '‚ùå' || '‚úÖ'}} ${{steps.report.outputs.message}}"}
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{secrets.JS_SLACK_WEBHOOK_URL}}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
