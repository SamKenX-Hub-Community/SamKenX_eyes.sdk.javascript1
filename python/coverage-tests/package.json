{
  "name": "@applitools/coverage-tests",
  "private": true,
  "version": "1.0.0",
  "engines": {
    "node": ">=10.0.0"
  },
  "main": "index.js",
  "description": "Coverage Tests for Applitools SDKs",
  "author": "Applitools <team@applitools.com>",
  "license": "SEE LICENSE IN LICENSE",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/applitools/sdk.coverage.tests.git"
  },
  "scripts": {
    "python:generate": "coverage-tests generate ./configuration --pascalizeTests --strict",
    "python:generate:playwright": "coverage-tests generate ./configuration/playwright.js --pascalizeTests --strict",
    "python:generate:local": "coverage-tests generate ./configuration/local.js --pascalizeTests --strict",
    "python:run": "APPLITOOLS_BATCH_ID=$(uuidgen) python3 -m pytest -s -v ./test/coverage/generic --rootdir=./test --junitxml=./coverage-test-report.xml",
    "python:run:parallel": "APPLITOOLS_BATCH_ID=$(uuidgen) python3 -m pytest -v -n 14  --durations=10 --dist loadgroup ./test/coverage/generic --rootdir=./test --junitxml=./coverage-test-report.xml",
    "python:move:report": "mv ./python/coverage-test-report.xml ./coverage-test-report.xml",
    "python:report:sandbox": "bongo report --sandbox --name 'python' --reportId $GITHUB_SHA",
    "python:report:prod": "bongo report --name 'python' --reportId $GITHUB_SHA",
    "python:report": "[ \"$TEST_REPORT_SANDBOX\" = \"False\" ] && npm run python:report:prod || npm run python:report:sandbox ",
    "python:tests": "./python_tests.sh"
  },
  "dependencies": {
    "@applitools/bongo": "^3.0.0",
    "@applitools/sdk-coverage-tests": "^3.0.0",
    "@typescript-eslint/parser": "^2.14.0",
    "typescript": "^3.7.4"
  }
}
